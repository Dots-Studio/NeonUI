/* 
    NeonUI Preview v0.51
    This is the developement version. Use the Minified version in your app.
*/

*{
    display: block;
    margin: 0;
    padding: 0;
	box-sizing: border-box;
    color: var(--TextBase);
    font-family: var(--Font), sans-serif;
    font-size: 16px;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    transition: color 0.1s ease, background-color 0.1s ease;
}
*:focus {
    outline: 1.5px solid var(--AccentColor);
    box-shadow: 0px 0px 8px 0px var(--AccentColor);
}
body {background-color: var(--AppBackground);}

/* Variables */
:Root {
    --HeadingFont: 'Inter';
    --Font: 'Work Sans';

    --RoundCorner1: 2px;
    --RoundCorner2: 4px;
    --RoundCorner3: 8px;

    --ShadowLight: 0px 3px 16px rgba(0, 0, 0, 0.12);
    --ShadowMedium: 0px 4px 12px rgba(0, 0, 0, 0.16);
    --ShadowHeavy: 0px 2px 24px rgba(0, 0, 0, 0.2);

    --BlurLight: blur(60px);
    --Blur: blur(80px);
    --HeavyBlur: blur(160px);

    /* Colors below won't change their look based on the theme and will always look the same. */
    --NeutralDark: #1A1A1A;
    --NeutralLight: #FFFFFF;
    --NeutralOverlay: rgba(0, 0, 0, 0.3);
    
    /* Basic accent color */
    --AccentColor: hsl(205, 100%, 42%);
}
/* Color variables */
.LightMode{
    --AppBackground: #f5f5f5;

    --ControlBase1: rgba(255, 255, 255, 0.6);
    --ControlBase2: rgba(0, 0, 0, 0.08);
    --ControlBase3: rgba(0, 0, 0, 0.12);
    --ControlBase4: rgba(0, 0, 0, 0.4);

    --BlurBrush1: rgba(255, 255, 255, 0.9);
    --BlurBrush2: rgba(255, 255, 255, 0.95);
    --BlurBrush3: rgba(255, 255, 255, 1);

    --Border1: rgba(0, 0, 0, 0.2);
    --Border2: rgba(0, 0, 0, 0.3);

    --Alt: #FFFFFF;
    --Base: #1A1A1A;
    --TextBase: #1A1A1A;

    --AccentColorLight: hsl(205, 73%, 52%);
    --AccentColorDark: hsl(205, 100%, 32%);
    --SuccessColor: hsl(120, 100%, 38%);
    --AttentionColor: hsl(44, 100%, 50%);
    --ErrorColor: hsl(0, 72%, 52%);
}
.DarkMode{
    --AppBackground: #202020;

    --ControlBase1: rgba(255, 255, 255, 0.1);
    --ControlBase2: rgba(255, 255, 255, 0.08);
    --ControlBase3: rgba(255, 255, 255, 0.12);
    --ControlBase4: rgba(255, 255, 255, 0.4);

    --BlurBrush1: rgba(0, 0, 0, 0.9);
    --BlurBrush2: rgba(0, 0, 0, 0.95);
    --BlurBrush3: rgba(0, 0, 0, 1);

    --Border1: rgba(255, 255, 255, 0.2);
    --Border2: rgba(255, 255, 255, 0.3);

    --Alt: #1A1A1A;
    --Base: #FFFFFF;
    --TextBase: #FFFFFF;

    --AccentColorLight: hsl(205, 73%, 2%);
    --AccentColorDark: hsl(205, 100%, 32%);
    --SuccessColor: hsl(120, 100%, 48%);
    --AttentionColor: hsl(44, 100%, 60%);
    --ErrorColor: hsl(0, 72%, 62%);
}

/* Check if browser supports blur */
@supports (backdrop-filter: blur(20px)) or (-webkit-backdrop-filter: blur(20px)) {
    .LightMode {
        --BlurBrush1: rgba(255, 255, 255, 0.6);
        --BlurBrush2: rgba(255, 255, 255, 0.7);
        --BlurBrush3: rgba(255, 255, 255, 0.8);
    }
    .DarkMode {
        --BlurBrush1: rgba(0, 0, 0, 0.6);
        --BlurBrush2: rgba(0, 0, 0, 0.7);
        --BlurBrush3: rgba(0, 0, 0, 0.8);
    }
}
/* Display outline only when user tabs (in supported browsers) */
@supports selector(*:focus-visible) {
    *:focus {
        outline: none;
        box-shadow: 0px 0px 0px 0px transparent;
    }
    *:focus-visible {
        outline: 1.5px solid var(--AccentColor);
        box-shadow: 0px 0px 8px 0px var(--AccentColor);
    }
}

/* Custom fonts */
@font-face {
    font-family: "FluentSystemIcons-Regular";
    src: url(Fonts/FluentSystemIcons-Regular.ttf);
}
@font-face {
    font-family: "Inter";
    src: url(Fonts/Inter.woff);
}
@font-face {
    font-family: "Work Sans";
    src: url(Fonts/WorkSans.woff);
}
@font-face {
    font-family: "FluentSystemIcons-Filled";
    src: url(Fonts/FluentSystemIcons-Filled.ttf);
}

/* Scrollbar */
::-webkit-scrollbar {
    width: 4px;
    height: 4px;
}
::-webkit-scrollbar-thumb {
    background: var(--Border1);
    border-radius: 4px;
}
::-webkit-scrollbar-thumb:hover {background: var(--Border2);}

/* Icons */
.iconRegular {font-family: FluentSystemIcons-Regular; font-size: 16px;}
.iconFilled {font-family: FluentSystemIcons-Filled; font-size: 16px;}

/* Text */
h1,h2,h3 {
    font-family: var(--HeadingFont), sans-serif;
    font-weight: 600;
}
h4,h5,h6 {font-weight: 600;}
h1,h2,h3,h4,h5,h6,p,code,pre {user-select: text;}
.heading{font-size: 56px;}
h1 {font-size: 40px;}
h2 {font-size: 32px}
h3 {font-size: 24px;}
h4 {font-size: 20px;}
h5 {font-size: 16px;}
h6 {font-size: 14px;}
p {font-size: 16px;}
.caption {color: var(--ControlBase4);}
.textSmall {font-size: 14px;}
hr {
    border: var(--Border2);
    background: var(--Border2);
    border-radius: 2px;
    height: 2px;
    margin: 4px;
}


/* Controls */

/* Buttons */
button, .btn, a {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    width: fit-content;
    height: fit-content;
    gap: 8px;
    background: var(--ControlBase1);
    border: 1.5px solid var(--Border1);
    border-radius: var(--RoundCorner2);
    padding: 8px 16px;
    transition: all 0.2s;
}
button:hover, .btn:hover, a:hover {background-color: var(--ControlBase3);}
button:active, .btn:active{transform: scale(0.95);}
.accentButton {background-color: var(--AccentColor); color: var(--Alt);}
.accentButton:hover {background: var(--AccentColorDark);}
.iconButton {
    border: none;
    background-color: transparent;
    padding: 12px;
}
.linkButton, a {
    display: block;
    background-color: transparent;
    border: none;
    border-radius: var(--RoundCorner2);
    color: var(--AccentColor);
    padding: 8px 16px;
    font-size: 16px;
    text-decoration: none;
    cursor: pointer;
}

/* Text input */
input[type="text"], textarea {
    background-color: var(--ControlBase1);
    border: 1.5px solid var(--Border1);
    border-radius: var(--RoundCorner2);
    padding: 8px 12px;
    transition: border 0.1s, box-shadow 0.4s;
}
input[type="text"]::placeholder, textarea::placeholder {color: var(--ControlBaseAlt3);}
input[type="text"]:focus, textarea:focus {
    background-color: var(--Alt);
    border: 1.5px solid var(--AccentColor);
    box-shadow: 0px 1px 8px 0px var(--AccentColor);
    outline: none;
}
input[type="text"]:hover, textarea:hover {border: 1.5px solid var(--Border2);}
input[type="text"]:focus:hover, textarea:focus:hover {border: 1.5px solid var(--AccentColorDark);}

/* Iframes & Webviews */
iframe, webview {border: none;}

/* Main */
main {
    flex: 1;
    overflow-y: scroll;
    height: 100vh;
}

/* Dialog */
.overlay {
    display: none;
    position: fixed;
    width: 100%;
    height: 100%;
    justify-content: center;
    align-items: center;
    top: 0; left: 0;
    background-color: var(--NeutralOverlay);
    z-index: 3;
}
.dialog {
    background-color: var(--Alt);
    min-width: 40%;
    max-width: 80%;
    border-radius: var(--RoundCorner2);
    box-shadow: var(--ShadowMedium);
    animation: scale-out-center 0.2s both;
}
.dialog h3 {margin-bottom: 16px}
.dialogContent {padding: 24px;}
.dialogBottom {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    margin-top: 12px;
    padding: 12px;
    background-color: var(--ControlBase2);
}

/* Chips */
.Chip, .chipSelected {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    background-color: var(--ControlBase1);
    border-radius: var(--RoundCorner2);
    padding: 8px 12px;
    transition: box-shadow 0.3s, background-color 0.2s;
    gap: 8px;
    border: 1.5px solid var(--ControlBase2);
}
.Chip:hover, .chipSelected:hover {box-shadow: var(--ShadowLight);}
.Chip .iconRegular {color: var(--Base);}
.chipSelected .iconRegular {color: var(--Alt);}
.chipRow {
    display: flex;
    flex-direction: row;
    gap: 8px;
}
.chipSelected {
    background-color: var(--AccentColor);
    color: var(--Alt);
}

/* Snackbars */
.snackbarParent {
    display: flex;
    position: absolute;
    justify-content: flex-end;
    align-items: center;    
    bottom: 0; right: 0;
    padding: 8px;
    flex-direction: column;
    width: 400px;
    gap: 8px;
    overflow: hidden;
    z-index: 4;
}
.snackbar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    min-height: 52px;
    padding-left: 20px;
    padding-right: 8px;
    border: 1.5px solid var(--Border1);
    border-radius: var(--RoundCorner2);
    background-color: var(--Alt);
    box-shadow: var(--ShadowMedium);
    animation: slide-up 0.4s ease-in-out;
}

/* Context menu */
.contextMenu {
    display: none;
    position: fixed;
    flex-direction: column;
    min-width: 256px;
    border-radius: var(--RoundCorner2);
    box-shadow: var(--ShadowMedium);
    background-color: var(--BlurBrush2);
    backdrop-filter: var(--BlurLight);
    z-index: 4;
    padding: 4px;
    border: 0;
}
.contextMenu ul li {
    display: flex;
    flex-direction: row;
    text-align: left;
    background-color: transparent;
    align-items: center;
    height: 32px;
    width: 100%;
    padding-left: 8px;
    gap: 8px;
    border-radius: var(--RoundCorner1);
}
.contextMenu ul li img{
    width: 16px;
    height: 16px;
}
.contextMenu ul li:hover{background-color: var(--ControlBase3);}
.contextMenuShortcut {
    position: absolute;
    right: 8px;
    color: var(--ControlBase4);
}

/* Card */
.Card {
    display: flex;
    background-color: var(--BlurBrush2);
    border: 1.5px solid var(--Border1);
    border-radius: var(--RoundCorner2);
    padding: 16px 8px;
    backdrop-filter: var(--BlurLight);
    transition: box-shadow 0.3s;
}
.Card:hover {
    background-color: var(--Alt);
    box-shadow: var(--ShadowMedium);
}

/* Checkbox */
.checkbox {
    display: block;
    position: relative;
}  
.checkbox input {
    position: absolute;
    opacity: 0;
    height: 0;
    width: 0;
}
.checkmark {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0; left: 0;
    height: 32px;
    width: 32px;
    border-radius: var(--RoundCorner2);
    border: 1.5px solid var(--Border1);
    background-color: var(--ControlBase1);
}
.checkbox:hover input ~ .checkmark {border: 1.5px solid var(--Border2);}
.checkbox input:checked ~ .checkmark {background-color: var(--AccentColor);}
.checkmark svg {display: none;}
.checkbox input:checked ~ .checkmark svg {
    display: block;
    stroke-dasharray: 24;
    stroke-dashoffset: -24;
    animation: check 0.25s forwards;
}
.checkboxRound {border-radius: 100%;}

/* Toggle Switch */
.toggleSwitch {
    display: block;
    position: relative;
}  
.toggleSwitch input {
    position: absolute;
    opacity: 0;
    height: 0;
    width: 0;
}
.switch {
    display: flex;
    align-items: center;
    position: absolute;
    top: 0; left: 0;
    height: 28px;
    width: 56px;
    border-radius: 100vw;
    border: 1.5px solid var(--Border1);
    background-color: var(--ControlBase1);
}
.toggleSwitch:hover input ~ .switch {border: 1.5px solid var(--Border2);}
.toggleSwitch input:checked ~ .switch {background-color: var(--AccentColor);}
.toggleSwitch input:hover ~ .switch::after {
    width: 22px;
    height: 22px;
    left: 2px;
    transition: all 0.1s linear;
}
.toggleSwitch input:checked:hover ~ .switch::after {right: 2px;}
.switch::after {
    display: block;
    width: 20px;
    height: 20px;
    position: absolute;
    left: 4px;
    background-color: var(--ControlBase4);
    border-radius: 100vw;
    content: '';
    transition: all 0.25s ease-in-out;
}
.toggleSwitch input:checked ~ .switch::after {
    background-color: var(--Alt);
    transform: translateX(27px);
}

/* Flex layouts */
.flexColumn {
    display: flex;
    flex-direction: column;
    gap: 4px;
}
.flexRow {
    display: flex;
    flex-direction: row;
    gap: 4px;
}

/* Banners */
.Banner {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding: 12px;
    background-color: var(--ControlBase3);
    border-radius: var(--RoundCorner2);
}

/* Slider */
.slider {
    -webkit-appearance: none;
    width: 100%;
    height: 4px;
    background: var(--ControlBase3);
    outline: none;
    border-radius: var(--RoundCorner1);
    margin-top: -4px;
}
.slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 28px;
    height: 28px;
    background: var(--Alt);
    border: var(--AccentColor) 6px solid;
    border-radius: 50%;
    transition: border 0.1s linear;
}
.slider::-webkit-slider-thumb:hover {border: var(--AccentColor) 5px solid;}
.slider::-webkit-slider-thumb:active {border: var(--AccentColor) 8px solid;}
.slider::-moz-range-thumb {
    -webkit-appearance: none;
    appearance: none;
    /* Only 16px because Firefox has a weird bug */
    width: 16px;
    height: 16px;
    background: var(--Alt);
    border: var(--AccentColor) 6px solid;
    border-radius: 50%;
    transition: border 0.1s linear;
}
.slider::-moz-range-thumb:hover {border: var(--AccentColor) 5px solid;}
.sliderContainer {
    position: relative;
}
.sliderContainer::before {
    display: block;
    height: 4px;
    width: var(--SliderValue);
    background-color: var(--AccentColor);
    content: '';
    border-radius: var(--RoundCorner1);
}
/* Progress controls */
.progressBar {
    height: 4px;
    width: 100%;
    background-color: var(--Border1);
    border-radius: 100vw;
    overflow: hidden;
}
.progressBarProgress , .progressBarIndeterminate {
    height: 100%;
    width: 50%;
    transition: width 0.5s;
    background-color: var(--AccentColor);
    border-radius: 100vw;
}
.progressBarIndeterminate {
    width: 100%;
    animation: indeterminateAnimation 2s infinite linear;
    transform-origin: 0% 50%;
}

Neon-ProgressRing {
    display: block;
    overflow: hidden;
}
Neon-ProgressRing svg {
    animation: spin 2s infinite ease-in-out;
}

/* Accordions */
.accordion, .accordionExpanded, .accordionCollapsed {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0px;
    min-width: 256px;
    max-width: 100vw;
    border: 1.5px solid var(--Border1);
    border-radius: var(--RoundCorner2);
    max-height: 100px;
}
.accordionHeader {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    background-color: var(--ControlBase1);
    width: 100%;
    margin: 0;
    border-radius: var(--RoundCorner2) var(--RoundCorner2) 0px 0px;
    padding: 8px 16px 8px 20px;
}
.accordionHeader p{font-weight: 600;}
.accordionContent {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: 8px 16px 8px 20px;
    width: 100%;
    background-color: var(--Alt);
    border-radius: 0px 0px var(--RoundCorner2) var(--RoundCorner2);
}
.accordionCollapsed .accordionContent{display: none;}

/* Tooltips */
.tooltip {
    display: none;
    position: absolute;
    z-index: 5;
    background-color: var(--BlurBrush1);
    padding: 8px 16px;
    backdrop-filter: var(--BlurLight);
    box-shadow: var(--ShadowLight);
    border-radius:var(--RoundCorner2);
    border: 1px solid var(--Border1);
}
.tooltipParent {position: relative;}
.tooltipParent:hover .tooltip {
    display: block;
    animation: fade-in 0.3s both;
}
.tooltipParent:active .tooltip {display: none;}

/* Sheets */
.sheet {
    display: flex;
    position: absolute;
    bottom: 0;
    background-color: var(--BlurBrush3);
    min-height: 32px;
    height: auto;
    width: 50vw;
    border-radius: var(--RoundCorner3) var(--RoundCorner3) 0px 0px;
    flex-direction: column;
    box-shadow: 0px 1px 12px rgba(0, 0, 0, 0.16);
    backdrop-filter: var(--Blur);
    padding: 24px 4px 4px;
}
.sheet::before {
    position: absolute;
    width: 40px;
    height: 4px;
    background-color:var(--Border1);
    display: block;
    top: 4px;
    left: 50%;
    margin: 5px 5px 5px -20px;
    border-radius: var(--RoundCorner2);
    content: ""
}
.sheetItem {
    display: flex;
    flex-direction: row;
    width: 100%;
    padding: 16px 12px;
    gap: 12px;
}
.sheetItem img {
    width: 16px;
    height: 16px;
}
.sheetItem:active {background-color: var(--ControlBase1);}

/*    Navigation    */

/* Side Nav */
.NavViewExpanded, .NavViewCollapsed {
    display: flex;
    flex-direction: column;
    background-color: var(--Alt);
    height: 100vh;
    transition: all 0.3s;
    z-index: 2;
    padding: 4px;
}
.NavViewExpanded {width: 256px;}
.NavViewCollapsed {width: 48px;}
.NavViewExpanded button, .NavViewCollapsed button {padding: 10px;}
.NavItemBottom {margin-top: auto;}
.NavViewItem, .NavViewItemSelected {
    display: flex;
    position: relative;
    align-items: center;
    min-height: 36px;
    border-radius: var(--RoundCorner2);
    background-color: transparent;
    overflow: hidden;
}
.NavViewItem::after, .NavViewItemSelected::after {
    transition: height 0.1s;
    top: auto;
    right: 0;
    display: block;
    position: absolute;
    height: 0%;
    width: 4px;
    background-color: var(--AccentColor);
    content: "";
    border-radius: 0 4px 4px 0;
}
.NavViewItem:hover{background-color: var(--ControlBase2);}
.NavViewItem img {
    margin: 8px 8px 8px 12px;
    height: 16px;
    width: 16px;
}
.NavViewCollapsed .NavViewItem {
    justify-content: center;
    font-size: 0;
}
.NavViewCollapsed .NavViewItem img {
    margin: 8px 8px 8px 8px;
    height: 16px;
    width: 16px;
}
.NavViewItemSelected {background-color: var(--ControlBase2);}
.NavViewItemSelected:hover {background-color: var(--ControlBase3);}
.NavViewItemSelected::after {height: 100%;}
.NavViewItemSelected:active::after {
    top: auto;
    height: 80%;
}

/* Command bars */
.commandBar {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    background-color: var(--Alt);
    width: 100%;
    padding: 4px;
}
.commandBar button {
    background-color: transparent;
    border-color: transparent;
}
.commandBar button:hover {background-color: var(--ControlBase3);}

/* Bottom Nav */
.BottomNav {
    display: flex;
    flex-direction: row;
    width: 100vw;
    min-height: 80px;
    padding: 8px 12px;
    background-color: var(--BlurBrush2);
    backdrop-filter: var(--Blur);
    align-items: center;
    position: fixed;
    bottom: 0;
    gap: 8px;
    z-index: 2;
}
.BottomNavItem {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    padding: 4px;
    border-radius: var(--RoundCorner2);
    flex: none;
    flex-grow: 1;
    height: 100%;
    gap: 8px;
}
.BottomNavItem img {
    width: 32px;
    height: 32px;
}

/* Code block */
code, .code {
    display: block;
    border-radius: var(--RoundCorner2);
    font-family: "Cascadia Code", Monospace;
    padding: 12px;
    color: white;
    background-color: var(--NeutralDark);
}

/*    Special    */

.hidden {display: none;}
head {display: none;}
/* 
   If you want to develop for dual screen devices and want to
   display 2 separate layouts on the displays, create a new div
   with the dualScreen class.
*/
.dualScreen {
    height: 100vh;
    width: 50vw;
}
/* Resizable content */
.resize, .resizeX, .resizeY {overflow: hidden !important;}
.resize {resize: both;}
.resizeX {resize: horizontal;}
.resizeY {resize: vertical;}

/*    Dark Mode    */
.DarkMode .accentButton, .DarkMode .chipSelected {
    background: var(--AccentColorLight);
    border: 1.5px solid var(--AccentColorDark);
    color: var(--Alt);
}
.DarkMode .accentButton:hover {background: var(--AccentColor);}

/*    Effects     */

.shine {
    position: relative;
    overflow: hidden;
}
.shine::after {
    position: absolute;
    background: linear-gradient(288.82deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 38%, var(--ControlBase3) 38%, var(--ControlBase3) 75%, var(--ControlBase3) 75%, rgba(0, 0, 0, 0) 100%);    width: 100%;
    height: 100%;
    top: 0; left: 0;
    animation: shine 2s infinite;
    content: "";
}


/*    Keyframes    */

/* Control animations */
@keyframes indeterminateAnimation {
    0% {
      transform:  translateX(0) scaleX(0);
    }
    40% {
      transform:  translateX(0) scaleX(0.4);
    }
    100% {
      transform:  translateX(100%) scaleX(0.5);
    }
}
@keyframes check {to {stroke-dashoffset: 0;}}
@keyframes shine {
    0% {
        transform: skewX(-10deg) translateX(-100%);
    }
    100% {
        transform: skewX(-10deg) translateX(200%);
    }
}
@keyframes snackbarDisappear {
    0% {
        opacity: 1;
        transform: translateY(0);
    }
    100% {
        opacity: 0;
        transform: translateY(10%);
    }
}
/* Generic animations */
@keyframes scale-out-center {
    0% {
        transform: scale(1.1);
        opacity: 0;
    }
    100% {
    transform: scale(1);
      opacity: 1;
    }
}
@keyframes scale-in-center {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(1.5);
    }
}
@keyframes fade-in {
    0% {opacity: 0;}
    100% {opacity: 1;}
}
@keyframes fade-out {
    0% {opacity: 1;}
    100% {opacity: 0;}
}
@keyframes slide-up {
    0% {transform: translateY(100%);}
    100% {transform: translateY(0);}
}
@keyframes spin {
    from {transform:rotate(0deg);}
    to {transform:rotate(360deg);}
}

/*    Media queries    */

/* Phones */
@media (max-width: 480px){
    .BottomNavItem {flex-direction: column;}
    .sheet {width: 100%;}
    .snackbarParent {width: 100vw;}
    .NavViewExpanded {position: fixed;}
}
/* Dual screen devices in landscape */
@media (horizontal-viewport-segments: 2) {
    /* ... */
}
/* Dual screen devices in portrait */
@media (vertical-viewport-segments: 2) {
    .dualScreen {
        height: 50vh;
        width: 100vw;
    }
}